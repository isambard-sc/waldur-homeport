@import '@waldur/metronic/sass/core/components/_variables.scss';

/* TABLE */
.table {
  thead > tr {
    background-color: if(isDarkMode(), $primary-50, $gray-50);

    > th {
      font-size: 12px;
      color: $grey-500;
      font-weight: 500;
      white-space: nowrap;

      svg {
        color: $grey-400;
      }
      &.sorting-column .sorting-buttons > button {
        &:hover svg {
          color: $grey-500;
        }
        &.active svg {
          color: $primary;
        }
      }
      &.filter-column > button {
        &:hover svg {
          color: $grey-500;
        }
        &.show svg {
          color: $primary;
        }
      }
    }
  }

  tbody > tr > td {
    color: $grey-500;
  }

  &:not(.px-0) {
    td:first-child,
    th:first-child {
      padding-left: 0.75rem;
    }
    td:last-child,
    th:last-child {
      padding-right: 0.75rem;
    }
  }

  /* TR */
  &.table-expandable tr {
    &.expanded,
    &.expanded + tr {
      background-color: if(isDarkMode(), $primary-50, $gray-50);
    }
  }
  thead > tr > th.header-actions {
    width: 50px;
    text-align: center;
  }
  tbody > tr {
    position: relative;

    > td.row-actions {
      > div {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.75rem;

        .btn {
          white-space: nowrap;
        }
      }
    }

    > td.row-control > div {
      display: flex;
      align-items: center;

      .error-mark {
        position: absolute;
        left: 0.7rem;
        margin-top: 1px;
        line-height: 1;

        i {
          color: if(isDarkMode(), $danger, $warning);
          font-size: 1.5rem;
        }
      }
    }

    // Inline filter
    > td.has-filter {
      position: relative;

      button.inline-filter {
        position: absolute;
        right: 0.75rem;
        transition: $transition-fade;
        opacity: 0;
        top: 50%;
        transform: translateY(-50%);
        transition: opacity 0.15s linear;
        background: rgba($light, 0.75);
        padding: 0.2rem 0.5rem;
        border-radius: 5px;

        svg {
          color: $grey-400;
        }
        &:hover {
          background: $light;

          svg {
            color: $grey-500;
          }
        }
      }
    }
    &:hover > td.has-filter button.inline-filter {
      opacity: 1;
    }
  }
}

// Shadow hover
.table-container.table-hover-shadow {
  tbody > tr:not(.expanded + tr):hover {
    border-top: 1px solid $border-color;
    border-bottom: 1px solid $border-color;
    border-radius: $border-radius-lg;
    box-shadow: if(
      isDarkMode(),
      0 0.1rem 1rem 0.25rem rgba($white, 0.05),
      $box-shadow-sm
    );
    transition: $transition-base;
  }

  // On grid view
  .card:not(.card-table):hover {
    box-shadow: if(
      isDarkMode(),
      0 0.1rem 1rem 0.25rem rgba($white, 0.05),
      $box-shadow-sm
    );
    transition: $transition-base;
  }
}

.table-responsive {
  overflow: inherit;
  overflow-x: auto;

  .table-container {
    width: 100%;
  }
}

/* TABLE IN CARD */
.card.card-table {
  &:not(.card-bordered) {
    border: unset;
  }

  &.grid-table .table-container {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }

  .card-header {
    border-bottom-style: dashed;
  }

  .table-filter {
    width: 100%;
    display: flex;
    align-items: stretch;

    .scroll-x {
      margin-bottom: -0.5rem;
    }

    .filter-toggle {
      display: flex;
      align-items: center;
      border-radius: 0;
      position: relative;

      .filter-field {
        max-height: 50px;
        width: 0;
        overflow: hidden;
        opacity: 0;
        transition: all 0.3s;
      }

      .filter-value {
        max-width: 100px;
        margin-left: 0.5rem;
        display: block;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

        > * {
          display: block;
          overflow: hidden;
          text-overflow: ellipsis;
        }
      }

      &.active {
        .filter-field {
          opacity: 1;
          width: 300px;
          margin-left: 0.5rem;
        }
        .filter-value {
          display: none;
        }
      }

      &:not(:last-child)::after {
        content: '';
        width: 2px;
        height: 40px;
        position: absolute;
        top: 15px;
        right: 0;
        background-color: $border-color;
      }
    }
  }

  .search-no-result,
  .search-error {
    margin-top: -2rem;
  }

  /* TABLE FULL IN CARD */
  &.full-width {
    .table-filter {
      padding-left: 0;
      padding-right: 0;
    }

    &:not(.grid-table) .card-body {
      padding-top: 0;
      padding-left: 0;
      padding-right: 0;

      .table {
        td:first-child,
        th:first-child {
          padding-left: $card-px;
        }
        td:last-child,
        th:last-child {
          padding-right: $card-px;
        }
      }

      .table-filters {
        padding-left: $card-px;
        padding-right: $card-px;
      }

      .search-no-result,
      .search-error {
        margin-top: 0;
      }
    }

    .table-pagination {
      padding: 0 $card-px !important;

      .page-item {
        .page-link {
          color: $grey-500;
          width: 40px;
          height: 40px;
        }
        .page-link:focus,
        .page-link:hover,
        &.active .page-link {
          color: $primary;
          background-color: $primary-50;
        }
      }

      .form-select {
        color: $dark;

        option {
          background-color: $body-bg;
        }
      }
    }
  }

  &.field-table {
    tr {
      cursor: pointer;
    }
    tr.checked,
    tr.checked:hover {
      background-color: $primary !important;

      > * {
        color: $dark-inverse !important;
        border: unset;
        --bs-table-accent-bg: $primary;
      }
    }

    .form-check .form-check-input[type='checkbox']:checked {
      background-image: escape-svg(
        url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 13 11' width='13' height='11' fill='none'><path d='M11.0426 1.02893C11.3258 0.695792 11.8254 0.655283 12.1585 0.938451C12.4917 1.22162 12.5322 1.72124 12.249 2.05437L5.51985 9.97104C5.23224 10.3094 4.72261 10.3451 4.3907 10.05L0.828197 6.88335C0.50141 6.59288 0.471975 6.09249 0.762452 5.7657C1.05293 5.43891 1.55332 5.40948 1.88011 5.69995L4.83765 8.32889L11.0426 1.02893Z' fill='#{$primary}'/></svg>")
      );
      background-color: $dark-inverse;
    }
    .form-check .form-check-input[type='radio']:checked {
      background-image: escape-svg(
        url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='2' fill='#{$primary}'/></svg>")
      );
      background-color: $dark-inverse;
    }
  }
}

// Filters menu and its inputs
.drawer .filter-container,
.card.card-table .table-filters-menu {
  white-space: normal;

  .filter-field {
    padding-top: 0;
  }

  // Select
  .metronic-select-container {
    margin: 0 -1rem -0.65rem;

    .metronic-select {
      &__control {
        border-radius: 0;
        border: 0;
        border-bottom: 1px solid $border-color;
        padding-bottom: 0.5rem;
        box-shadow: none;
      }

      &__dropdown-indicator {
        display: none;
      }
    }
  }

  // Select Menu/List
  .metronic-select__menu {
    position: relative;
    box-shadow: unset;
    margin: 0;

    .metronic-select__option {
      padding-top: 2px;
      padding-bottom: 2px;
      height: 50px;

      > * {
        text-overflow: ellipsis;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
      }
    }
  }

  // Sidebar accordion items
  .accordion-item {
    border-radius: 0;
    border-left: 0;
    border-right: 0;
  }

  // Column filter
  &.column-filter {
    text-transform: none;
    text-align: start;
    height: 0;
    width: 0;

    .menu-link {
      display: none;
    }
  }
}
.card.card-table th:not(:first-child) .table-filters-menu.column-filter {
  .menu-sub-dropdown {
    margin-left: -125px !important;
  }
}

// Mobile mode
$mobile-spacing: get($content-spacing, tablet-and-mobile);
@include media-breakpoint-down(sm) {
  .card.card-table.full-width {
    margin-left: -$mobile-spacing;
    margin-right: -$mobile-spacing;
    border-radius: 0;

    .card-header,
    .table-pagination {
      padding-left: $mobile-spacing !important;
      padding-right: $mobile-spacing !important;
    }

    td:first-child,
    th:first-child {
      padding-left: $mobile-spacing !important;
    }
    td:last-child,
    th:last-child {
      padding-right: $mobile-spacing !important;
    }
  }
}
